"use strict";
// Copyright (C) 2017 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Returns true if the argument is -0, false otherwise.
 */
exports.isNegativeZero = typeof Object.is !== "undefined"
    ? function (x) { return Object.is(x, -0); }
    : function (x) { return x === 0 && (1 / x < 0); };
var froundShim = (function () {
    var tmp = new Float32Array(1);
    return function (x) {
        tmp[0] = +x;
        return tmp[0];
    };
})();
/**
 * Returns new number rounded to float32.
 *
 *  In ES2015, Math.fround.
 */
exports.fround = Math.fround || froundShim;
function log2Shim(x) {
    return Math.log(x) * Math.LOG2E;
}
/**
 * Returns base 2 logarithm.
 *
 * Note that result approximation is implementation-dependent.
 * If result is to be used in bit masks, use Math.round() on it.
 *
 * In ES2015, Math.log2.
 */
exports.log2 = Math.log2 || log2Shim;
//# sourceMappingURL=float.js.map