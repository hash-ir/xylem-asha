"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(exports, "__esModule", { value: true });
var bytewriter_1 = require("./bytewriter");
var benchmark_1 = require("@stablelib/benchmark");
benchmark_1.report("ByteWriter write", benchmark_1.benchmark(function () { return benchmarkWrite(8192); }, 8192));
benchmark_1.report("ByteWriter writeByte", benchmark_1.benchmark(function () { return benchmarkWriteByte(8192); }, 8192));
benchmark_1.report("ByteWriter writeUint32", benchmark_1.benchmark(function () { return benchmarkWriteUint32(8192); }, 8192));
benchmark_1.report("ByteWriter writeFloat64", benchmark_1.benchmark(function () { return benchmarkWriteFloat64(8192); }, 8192));
function benchmarkWrite(n) {
    var b = benchmark_1.byteSeq(n / 32);
    var w = new bytewriter_1.ByteWriter();
    for (var i = 0; i < n; i += 32) {
        w.write(b);
    }
    w.finish();
}
function benchmarkWriteByte(n) {
    var w = new bytewriter_1.ByteWriter();
    for (var i = 0; i < n; i++) {
        w.writeByte(0x7f);
    }
    w.finish();
}
function benchmarkWriteUint32(n) {
    var w = new bytewriter_1.ByteWriter();
    for (var i = 0; i < n; i += 4) {
        w.writeUint32BE(12345678);
    }
    w.finish();
}
function benchmarkWriteFloat64(n) {
    var w = new bytewriter_1.ByteWriter();
    for (var i = 0; i < n; i += 8) {
        w.writeUint32BE(12345.67890);
    }
    w.finish();
}
//# sourceMappingURL=bytewriter.bench.js.map