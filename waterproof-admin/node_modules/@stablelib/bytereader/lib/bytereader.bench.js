"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(exports, "__esModule", { value: true });
var bytereader_1 = require("./bytereader");
var benchmark_1 = require("@stablelib/benchmark");
var buf = benchmark_1.byteSeq(8 << 10);
benchmark_1.report("ByteReader read", benchmark_1.benchmark(function () { return benchmarkRead(buf); }, buf.length));
benchmark_1.report("ByteReader readByte", benchmark_1.benchmark(function () { return benchmarkReadByte(buf); }, buf.length));
benchmark_1.report("ByteReader readUint32", benchmark_1.benchmark(function () { return benchmarkReadUint32(buf); }, buf.length));
benchmark_1.report("ByteReader readFloat64", benchmark_1.benchmark(function () { return benchmarkReadFloat64(buf); }, buf.length));
function benchmarkRead(b) {
    var r = new bytereader_1.ByteReader(b);
    var n = b.length / 32;
    for (var i = 0; i < b.length; i += n) {
        r.read(n);
    }
}
function benchmarkReadByte(b) {
    var r = new bytereader_1.ByteReader(b);
    for (var i = 0; i < b.length; i++) {
        r.readByte();
    }
}
function benchmarkReadUint32(b) {
    var r = new bytereader_1.ByteReader(b);
    for (var i = 0; i < b.length; i += 4) {
        r.readUint32BE();
    }
}
function benchmarkReadFloat64(b) {
    var r = new bytereader_1.ByteReader(b);
    for (var i = 0; i < b.length; i += 8) {
        r.readFloat64BE();
    }
}
//# sourceMappingURL=bytereader.bench.js.map